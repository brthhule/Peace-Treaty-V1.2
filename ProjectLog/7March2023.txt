March 2: 20 min
	11:20 - 11:40 pm (20 min): Deleted OtherFunctions from Provinces. Working on cleaning up ScoutMA-- error: use of undeclared identifer 'targetProvince.' ScoutMA is a huge mess-- come back to this later.
-----------------------------------------
March 7: 3 hours, 15 min
	6:30 - 8:00 pm (1 hour, 30 min): Went through, fixed instances of getInt/getChar, changed to getInput. Started working on AttackMA. Fixed some things in AllUnits (add/remove troops), basic functionality, simplified calculation process.
	8:05 - 9:50 pm (1 hour, 45 min): Continued to work on AttackMA. Added determineLostCP to straigten out lost power cp-- should be proportional to army sizes (bigger armies will do more damage to smaller armies, same size armies will do less damage to each other). Changed battleCalculations to calculateDeadTroops. Worked a little bit on ArmyDeploymentMA-- applied selectCommander to the deployCommander menu thingy. Going to BuildMA now. Updated Lists.cpp to use vectors for getInput instead of strings for getChar. Updated TrainMA to use getInput. Led back to MapMA-- very messy. Have to sort out stuff with how it interacts with other classes/main actions. I'll come back to this at some later point.
-----------------------------------------
March 10: 3 hours, 50 min

	8:10 - 10:00 pm (1 hour, 50 min): Going to implement an unordered_map instead of a vector in Provinces to keep track of Commanders because 1) Want to get practice with unordered_map 2) Unordered_map is faster, although it uses more memory 3) order of items don't matter 4) I really just need to access the commanders by their names (keys). If the player changes the name of a commander, I can just add a new key-value pair with the commanderProfile pointer and erase the old one. Added basicStats to Provinces to reduce Constructor redundancy. Working on ScoutMA-- something wrong with coordinates. Adding getProvincesCanScout method to reduce chaos and nesting. Added returnCoordinates to CommanderProfile to make coordinates getting a little bit easier. Added printOutputCoordinates to Provinces.h to make printing coordinates easier. Added returnLevel to AllUnits. Moved printOutputCoordinates, translateX, and translateY to AllUnits so CommanderProfile can use them too. Moved returnCoordinate and returnCoordinates from CommanderProfile to AllUnits (9:30). Deleted returnCoordinatesVector from Provinces (redundant). Participants still uses vectors to keep track of Provinces and Commanderprofiles instead of an unordered_map like how Provinces keeps track of Commanders-- this shouldn't matter for now, but I should probably make them uniform in the future. Moved addVectors and subtractVectors from AllUnits to OtherFunctions to Participants can use them too. 

	10:00 - 10:30 pm (30 min): Finished making calculateEachUnit and calculateEachResource methods (and their respective calculateTotal methods)-- can probably merge them at some point, but I'll worry about that another time. Working on created scoutMap in Participants-- this way, the action of generating a scout report is burdened by the Participant (given a province/commander and accuracy level), not the unit itself. Moved updateProvinceResources from OtherFunctions to Main bc Participants used OtherFunctions and Provinces, and OtherFunctions uses Provinces, so I have to offload Provinces stuff from OtherFunctions to other classes/files. Moved createMap and pauseGame to main. Moving showMap to Participants. (10:25)-- finished taking Provinces out of OtherFunctions. Gonna take a break.

	10:30 pm - 12:00 am (1 hour, 30 min): Consolidating the calculateTotal methods into calculateTotal and calculateEach methods into calculateEach. Got error trying to make scoutMap equal to &provincesMap-- something about something being overloaded. Moved the * to after the inside vector instead of the Provinces, ran program to see if it works, console started telling me to work on ArmyDeploymentMA, so I guess I'm doing that now. In the future, I should probably find away to consolidate all the add/subtract methods in AllUnits so it's less clunky. Moving on to BuildMA. Going to TrainMA. Created subtractCheckResources method in Provinces to make upgrade/training checking easier. Console telling me to work on MapMA now-- wrapping into the Participants scoutMap idea now. Creating new class: ScoutMap. Creating another class: ScoutProvinces. Realized I don't need ScoutProvinces-- I was going to create a new class so It'd be separate from ProvincesMap, then I realized the Provinces and CommanderProfile classes are already independent. Moved completeProvinceScoutReport from Provinces to ScoutMap. Moved completeProvinceScoutReport back to Provinces. Realized I don't actually need ScoutMap-- I can just work inside of Participants, deleted it. I messed up the province ScoutLog functionality-- have to go to a previous git commit to see what I did in the past (make sure to committ current version tho).
-----------------------------------------------
March 11 (4 hours, 10 min):
	4:00 - 6:10 pm (2 hours, 10 min): Continuing to work on Scout Log functionality. Created modifyArray in OtherFunctions because I've been using vectors a lot, which isn't memory efficient. I'm going to start changing vectors to arrays where I can. Moved pauseGame from main to PlayerAction, where is the only place it's called for. Worked on ScoutMA a little bit, created modifyTroops/Resources/whatever to consolidate the add/subtract methods. Jumping around and fixing stuff. Using arrays is a lot more messy than using vectors, but I think the memory benefits are worth it. Currently working on MapMA, figuring out scout stuff. 

	6:15 - 7:25 pm (1 hour, 10 min): Working on scout stuff reimplementing provinceStats. Set up basic structure for Provinces and CommanderProfile scout reports-- have all the items I need to keep track of. Have yet to actually implement anything (7:10)-- I'm going to run the program first and fix everything else then come back when it starts running. Regular arrays suck-- it's too complicated trying to work around them. I'm going to use std::array instead, which, like primitive arrays, may perform better than vectors, but I can return them from methods and stuff.

	7:30 - 8:20 pm (50 min): Kept jumping around, fixing stuff. Worked on MapMA, next up is ScoutMA.
----------------------------------------------
March 12: 1 hour, 40 min
	3:55 - 5:35 pm (1 hour, 40 min): Just going through general erros-- mostly having to do with the change from primitive arrays to std::array. Working on Participants, simplified printListOfProvinces. Changed getYourCoords to getYourProvince to make it more intuitive to understand. Replaced vector for CommanderProfile with unordered_map, fixing stuff as needed. Changed getCommanderName to getCommanderByName to make it more intuitive. Deleted findCommanderIndex-- is never used. Worked on some Provinces Scout stuff.
---------------------------------------------
March 17: 1 hour
	11:00 pm - 12:00 am (1 hour): Fixing whatever the console tells me to fix. Problems in ArmyDeploymentMA, going to go fix now. Rewriting code to make it more readable-- changing functionality so instead of selecting commander by number in list/index, do so by identying their name. Added enterAnything to OtherFunctions to make going back the previous menu easier. Moving to CommanderProfile now (11:42 pm). Later on, have to make functionality for scout stats. Worked on ScoutMA, turned printCoordinates into a string so it would make printing coordinates easier. Made getCanScoutTwo
------------------------------------------------
March 18: 4 hours, 15 min
  7:45 - 7:55 am (10 min): Fixing console errors. Getting "make: *** [Makefile:17: PlayerAction.o] Error 1", going to search it up. Added "#include "ArmyDeploymentMA.h"", problem went away for now. Going to AttackMA.h. There might be a problem with selecting commanders hby name isntead of index.

 8:40 am - 8:55 am (15 min): Working on AttackMA. Note to self: don't use the built in repl auto format feature because it messes everything up-- only use if absolutely have to. Did random stuff, have to finish modiyfing casualtyReport to use arrays instead of vectors

  9:45 - 9:55 am (10 min): Working on Participants. In the process of taking out getCommander(index) and replacing it with unordered_map

  11:10 - 11:25 am (15 min): Working on ScoutMA, fixing getCanScoutTwo. Note to self; need to work more on selectUnitToScout.

  12:10 - 12:25 pm (15 min): Working on selectUnitToScout. Created selectUnitToScoutTwo to separate the text display from the actualy functionality. Fixed printCoordinates; didn't work because I tried concatenating the integer coordinates with the string text-- I turned the integers into strings and then concatenated the strings together. Changed coordinates[2] in Mobility to an array object. Still getting error:
  PlayerAction.cpp:51:5: error: unknown type name 'ArmyDeploymentMA'
    ArmyDeploymentMA newArmyDeploymentMA(participant);
1 error generated.
make: *** [Makefile:17: PlayerAction.o] Error 1
Have to find out what this is about and how to fix it; all the other functions seem find, what's different about this one?

20 min: Tried setting up Visual Studio Code so that I could work using that IDE (which has better navigation features, like using ctrl + shift + f to find all instances of something, but when you click on an item, the screen doesn't disappear so you have to go back again). Figured out how to connect/clone the github repo, but couldn't figure out how to run/debug the code-- running into configuration issues or something like that. Just going to stick to repl for now and switch over after more research. 

	8:30 - 9:50 pm (1 hour, 20 min): Working on Provinces. Delted compileProvinceStats-- I think I can just pass a Provinces object to the scout function instead of doing all of this unnecessary work. Conolidating scout stuff to completeProvinceScoutReport. Rewrote completeProvinceScoutReport to be more simple and actually make sense. Finished completing completeProvinceScoutReport. After doing all this, I'm going to make the return... / get... uniform to get... so I don't have to remeber between the two for different functions and I can just use one of them. Finished updating all the return... methods and isntances to get... (9:47). Going to go fix Participants. Finished fixing getEach. Everything should work now??? (9:50)

	10:10 - 11:25 pm (1 hour, 15 min): Still getting the PlayerAction/ArmyDeploymentMA error. Trying to fix it now. I fixed some stuff in ArmyDeploymentMA (using selectedCommander instead of newCommander, deleting an unnecessary *), error went away for now. Going to AttackMA now. Have to work on battleCalculations functionality so the math is logical. Going to scoutMA now. Still getting ArmyDeployment error in PlayerAction... Deleted all the main actions classes from main because they're never used. Console telling me to go fix ArmyDeployment now. Going to Participants now. Getting ArmyDeployment error again. I think the issue is that ArmyDeployment MA includes Participants, CommanderProfile, and Provinces, causing circular dependency. I have to decide on what to take out and how to work around it. Took CommanderProfile entirely out of ArmyDeployment, took Provinces half out of ArmyDeployment. I think it should work now? (11:24). Nope, stil getting the error.

	11:40 - 11:55 pm (15 in): Let's see what's going wrong here... ArmyDeploymetn was still externing provinceResourceNames and initialResources as primitive arrays; changed this to match the current array objects... Still not working. I just ended up deleting the ArmyDeploymentMA class and copying all the content to ArmyOverviewMA. Let's see if this works... got error:
clang-12: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [Makefile:22: main] Error 1
exit status 2
I have no idea what's going on. I'll call it quits for today... (11:57). Console asked me to enter -v for invocation or something, I did, got message saying vlang has been uploaded from Nix???
-------------------------------------
March 19: 2 hours, 35 min
  8:10 - 8:25 am (15 min): Fixing undefined references. Went through textFunctions.h, deleted unnecessary content.
  9:50 - 9:55 am (5 min): Coninuing fixing the undefined reference stuff
  11:10 - 11:15 am (5 min): Worked on implementing typedef struct constValues CV so that instead of externing a bunch of arrays everytime I need them, I can just extern the struct
	9:45 - 11:55 pm (2 hours, 10 min): Working on implementing the struct. Struct producing errors about "member access to incomplete type, " changed struct into a class. Fixing references stuff. Added printCommanders to Provinces. Added hasCommander to Provinces. We're finally working!!! (11:10 pm). No more errors (at least for now)! Reformatted Lists.cpp to be less clunky. Getting error with the first user input tree: entering S works, but entering garbage input like "sgsdgdsf" and then s afterward, in the "invalid input" prompt goes to another invalid input prompt, which shouldn't happen, and entering s again goes throws:
	free(): double free detected in tcache 2
signal: aborted (core dumped)
I'm going to take a break and work on this tomorrow or something.
-----------------------------------------
March 20: 1 hour, 50 min
  5 min: The reason why getInput wasn't working was because I didn't have a return statement when I repeated getInput. Adding the return statement before the reiteration made it work.

  10 min: Fixing formatting stuff. For getInput, the true/false parameter is "1" for most of the getInput instances-- I think this is from the previous getChar/getInt system. These are causing errors because it's saying that invalid input is being put in when the prompt hasn't even showed yet-- have to change this to "false"

  30 min: Working on formatting stuff, running the program and fixing anything that produces errors. 

  15 min: Worked on PlayerAction a little bit-- having trouble with isAlive. For some reason, the commandersList isn't being increased when the Participant is created-- have to figure out why and fix it.

	10:40 - 11:30 pm (50 min): Asked Lauren to test help test some stuff out. Working on formatting stuff. Got everything to work up until the PlayerAction menu, added directions for continent size to optimize map for mobile devices (and other conditions), fixed getInput instances to use true/false instead of numbers. Have to work on TrainMA, map is acting funky.
--------------------------------------------
March 21: 1 hour, 40 min
  10 min: Figured out Participant indices-- just forgot to set the participant index at Participant initialization
  30 min: Tweaking gameplay
  1 hour: Tried to find a way to bring code over to VS Code/Vistual Studio. Figured out how to make Visual Stuido connect to git hub (I think). The first time I cloned the repo, it wouldn't run, so I did some experimenting and researching. It turns out Linx and Windows use different containers for files, and their compiling methods are also different (cloning the github repo that I was using with repl wouldn't work). I basically just went through all the files in repl and copied them to a new Visual Studio project and uploaded that to a new repository. Basically, I now have two repos: one for linux (Repl) and one for windows (Visual Studio verison). I'm going to try to keep track of changes between the two by seeing what I uploaded last to github and using that as a baseline and changing the other one. It might be tricky keeping up with the different versions, but I think it should be fine for the most part. There's suppsoed to be a service that can transpose the linux container to a windows-formmatted container, but I haven't looked into that. Going forward, I'm going to need to be vigiliant in keeping track of every change and committing it. Changed project name to "Peace Treaty"
-------------------------------------------------------
March 28: 3 hours, 5 min
	45 min: Practiced learning how to use a Binary Search Tree. I understand how to make and use one, but I have yet to make one that has successfully run. I got caught up in making the options for the tree (like entering a value for a root, adding a node, deleting a node, and transversing the tree), and I started working on how to read from a text file. I figured out how to read information from a text file as well as how to retrieve values from that file-- I plan on implementing this in the textFunctions file so instead of having a bunch of cout statements, I can just read from the file. Once I figure out how to write to a file as well, I plan on starting to implement the save progress/pause game mechanic. I don't know where I might implement the binary search tree, but I figured that it's better to learn about data structures/algorithms now so I can implement code as efficiently as possible from the get go instead of learning afterward and going back and fixing things.
	6:50 - 9:10 pm (2 hours, 20 min): Implementing text file structure. Created folder structure to organize files better-- heirarchy is main & PlayerAction -> MA -> Units -> Misc. Ideally, Misc would be in MA with Units, but both MA and Units needs CV from Misc, and I can't just promote CV to MA bc OtherFunctions also needs CV, so I just moved Misc to Units (7:30 pm). Going to work on text files now. Created text file for the synopsis, moved the casualtyReport to AttackMA; there is no more use for textFunctions, so I'm going to delete it. Replaced Lists with getOptions and showHelp in showText. Getting errors with printFile and getOptions-- the program can't open the relevant text files for some reason. I think it might do with something about what folders they're in, but I don't know for sure. I'll come back to this at a later time.
------------------------------------
March 29: 30 min
	30 min: worked on text files, turned out that I just didn't incldue the full path name, worked on formatting the text files.
